{"ast":null,"code":"var _jsxFileName = \"/home/pranav/Desktop/mysite/frontend/src/Components/BlogPage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Router, useParams, useHistory } from \"react-router-dom\"; // import ReactMarkdown from 'react-markdown';\n// import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// import { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport './BlogPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BlogPage() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState([]);\n  const query = `query{\n        postById(id:${id}){\n          id\n          category\n          coverImage\n          title\n          body\n        }\n      }\n    `;\n  useEffect(() => {\n    const sendingPost = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    };\n    fetch('http://127.0.0.1:8000/graphql', sendingPost).then(response => response.json()).then(data => setData(data.data.postById));\n  }, [id]);\n  const description = `${data.body}`;\n  const coverimage = \"http://127.0.0.1:8000/media/\" + data.coverImage; // const Component = ({description}) => {\n  //     return (\n  //       <SyntaxHighlighter language=\"python\" style={dark}>\n  //         {description ?? ''}\n  //       </SyntaxHighlighter>\n  //     );\n  //   };\n  // This Part is added for pushing it to \n  // the post based on the clicking the next \n  // or previous post but when I had just done \n  // this the url part is changed but the page \n  // is not changing but when i click on refresh \n  // then the page is being loaded according to\n  // the URL So I thought of making the browser \n  // render when ID changed by adding that dependency\n  // to the list of useEffect and now it worked fine\n  //Idea initialized from https://stackoverflow.com/questions/31079081/programmatically-navigate-using-react-router\n\n  const history = useHistory();\n\n  const prevPost = () => {\n    history.push(`/blogs/${id - 1}`);\n  };\n\n  const nextPost = () => {\n    const newid = +id + 1; //This is typecasting when i directly gave as id+1 its adding like a string like 1+1=11 so \n\n    console.log(newid);\n    history.push(`/blogs/${id - 1}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog__page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"blog__title\",\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 45\n          }, this), \" \", data.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"blog__coverimage\",\n          src: coverimage,\n          alt: \"CoverImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog__description\",\n        dangerouslySetInnerHTML: {\n          __html: description\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blogpage-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            prevPost();\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            nextPost();\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BlogPage, \"FN7Obmdh8ndJDShtcN9hIjK6tIU=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = BlogPage;\nexport default BlogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"sources":["/home/pranav/Desktop/mysite/frontend/src/Components/BlogPage.js"],"names":["React","useState","useEffect","Router","useParams","useHistory","BlogPage","id","data","setData","query","sendingPost","method","headers","body","JSON","stringify","fetch","then","response","json","postById","description","coverimage","coverImage","history","prevPost","push","nextPost","newid","console","log","title","category","__html"],"mappings":"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","sourcesContent":["import {React,useState,useEffect} from 'react'\nimport { Router, useParams, useHistory } from \"react-router-dom\";\n// import ReactMarkdown from 'react-markdown';\n// import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// import { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport './BlogPage.css';\n\nfunction BlogPage() {\n\n    const {id} = useParams();\n    const [data,setData] = useState([])\n    const query=`query{\n        postById(id:${id}){\n          id\n          category\n          coverImage\n          title\n          body\n        }\n      }\n    `\n    useEffect( ()=>{\n        const sendingPost = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n\n            body: JSON.stringify({query}),\n        };\n\n        fetch('http://127.0.0.1:8000/graphql', sendingPost)\n        .then(response => response.json())\n            .then(data => setData(data.data.postById));\n    },[id])\n\n    const description = `${data.body}`;\n    const coverimage = \"http://127.0.0.1:8000/media/\"+data.coverImage;\n\n\n    // const Component = ({description}) => {\n    //     return (\n    //       <SyntaxHighlighter language=\"python\" style={dark}>\n    //         {description ?? ''}\n    //       </SyntaxHighlighter>\n    //     );\n    //   };\n\n    // This Part is added for pushing it to \n    // the post based on the clicking the next \n    // or previous post but when I had just done \n    // this the url part is changed but the page \n    // is not changing but when i click on refresh \n    // then the page is being loaded according to\n    // the URL So I thought of making the browser \n    // render when ID changed by adding that dependency\n    // to the list of useEffect and now it worked fine\n    //Idea initialized from https://stackoverflow.com/questions/31079081/programmatically-navigate-using-react-router\n\n    const history = useHistory();\n    const prevPost = () => {\n        history.push(`/blogs/${id-1}`);\n    }\n    const nextPost = () => {\n        const newid = (+ id)+1 //This is typecasting when i directly gave as id+1 its adding like a string like 1+1=11 so \n        console.log(newid)\n        history.push(`/blogs/${id-1}`);\n    }\n    \n\n    return (\n        <div className='blog__page'>\n            <div className='blog__content'>\n                <div>\n                    <p className='blog__title'>{data.title}</p>\n                </div>\n                <div >\n                    <p className='category'><b>Category:</b> {data.category}</p>\n                </div>\n                <div>\n                    <img className = 'blog__coverimage' src={coverimage} alt='CoverImage'/>\n                </div>\n                \n                {/* This dangerouslySetInnerHTML is for rendering exactly the html elements in the div without escaping the html tags */}\n                <div className='blog__description'\n                    dangerouslySetInnerHTML={{\n                    __html: description\n                }}></div>\n                {/* <ReactMarkdown children={description} components={{\n                    code:Component,\n                }}></ReactMarkdown> */}\n                <div className='blogpage-navigation'>\n                    <button onClick={()=>{prevPost()}}>Previous</button>\n                    <button onClick={()=>{nextPost()}}>Next</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BlogPage"]},"metadata":{},"sourceType":"module"}