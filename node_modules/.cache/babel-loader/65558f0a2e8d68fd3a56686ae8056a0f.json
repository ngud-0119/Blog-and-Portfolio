{"ast":null,"code":"var _jsxFileName = \"/home/pranav/Desktop/mysite/frontend/src/Components/BlogPage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport ReactMarkdown from 'react-markdown'; // import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// import { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport './BlogPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BlogPage() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState([]);\n  const query = `query{\n        postById(id:${id}){\n          id\n          category\n          coverImage\n          title\n          body\n        }\n      }\n    `;\n  useEffect(() => {\n    const sendingPost = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    };\n    fetch('http://127.0.0.1:8000/graphql', sendingPost).then(response => response.json()).then(data => setData(data.data.postById));\n  }, []);\n  const description = `${data.body}`;\n  const coverimage = \"http://127.0.0.1:8000/media/\" + data.coverImage; // const Component = ({description}) => {\n  //     return (\n  //       <SyntaxHighlighter language=\"python\" style={dark}>\n  //         {description ?? ''}\n  //       </SyntaxHighlighter>\n  //     );\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog__page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"blog__title\",\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"category__\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 47\n          }, this), data.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"blog__coverimage\",\n          src: coverimage,\n          alt: \"CoverImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog__description\",\n        dangerouslySetInnerHTML: {\n          __html: description\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BlogPage, \"lbkB6Dl1nlDFKNCK3Q7pma8jyxU=\", false, function () {\n  return [useParams];\n});\n\n_c = BlogPage;\nexport default BlogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"sources":["/home/pranav/Desktop/mysite/frontend/src/Components/BlogPage.js"],"names":["React","useState","useEffect","useParams","ReactMarkdown","BlogPage","id","data","setData","query","sendingPost","method","headers","body","JSON","stringify","fetch","then","response","json","postById","description","coverimage","coverImage","title","category","__html"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CACA;AACA;;AAEA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM;AAACC,IAAAA;AAAD,MAAOH,SAAS,EAAtB;AACA,QAAM,CAACI,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAMQ,KAAK,GAAE;AACjB,sBAAsBH,EAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KATI;AAUAJ,EAAAA,SAAS,CAAE,MAAI;AACX,UAAMQ,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFO;AAIhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,QAAAA;AAAD,OAAf;AAJU,KAApB;AAOAO,IAAAA,KAAK,CAAC,+BAAD,EAAkCN,WAAlC,CAAL,CACCO,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAEKF,IAFL,CAEUV,IAAI,IAAIC,OAAO,CAACD,IAAI,CAACA,IAAL,CAAUa,QAAX,CAFzB;AAGH,GAXQ,EAWP,EAXO,CAAT;AAaA,QAAMC,WAAW,GAAI,GAAEd,IAAI,CAACM,IAAK,EAAjC;AACA,QAAMS,UAAU,GAAG,iCAA+Bf,IAAI,CAACgB,UAAvD,CA5BgB,CA+BhB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BhB,IAAI,CAACiB;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,kCAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA1B,EAA2CjB,IAAI,CAACkB,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA,+BACI;AAAK,UAAA,SAAS,EAAG,kBAAjB;AAAoC,UAAA,GAAG,EAAEH,UAAzC;AAAqD,UAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI;AAAK,QAAA,SAAS,EAAC,mBAAf;AACI,QAAA,uBAAuB,EAAE;AACzBI,UAAAA,MAAM,EAAEL;AADiB;AAD7B;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA/DQhB,Q;UAEQF,S;;;KAFRE,Q;AAiET,eAAeA,QAAf","sourcesContent":["import {React,useState,useEffect} from 'react'\nimport { useParams } from \"react-router-dom\";\nimport ReactMarkdown from 'react-markdown';\n// import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// import { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport './BlogPage.css';\n\nfunction BlogPage() {\n\n    const {id} = useParams();\n    const [data,setData] = useState([])\n    const query=`query{\n        postById(id:${id}){\n          id\n          category\n          coverImage\n          title\n          body\n        }\n      }\n    `\n    useEffect( ()=>{\n        const sendingPost = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n\n            body: JSON.stringify({query}),\n        };\n\n        fetch('http://127.0.0.1:8000/graphql', sendingPost)\n        .then(response => response.json())\n            .then(data => setData(data.data.postById));\n    },[])\n\n    const description = `${data.body}`;\n    const coverimage = \"http://127.0.0.1:8000/media/\"+data.coverImage;\n\n\n    // const Component = ({description}) => {\n    //     return (\n    //       <SyntaxHighlighter language=\"python\" style={dark}>\n    //         {description ?? ''}\n    //       </SyntaxHighlighter>\n    //     );\n    //   };\n\n    return (\n        <div className='blog__page'>\n            <div className='blog__content'>\n                <div>\n                    <p className='blog__title'>{data.title}</p>\n                </div>\n                <div className='category'>\n                    <p className='category__'><b>Category:</b>{data.category}</p>\n                </div>\n                <div>\n                    <img className = 'blog__coverimage' src={coverimage} alt='CoverImage'/>\n                </div>\n                \n                {/* This dangerouslySetInnerHTML is for rendering exactly the html elements in the div without escaping the html tags */}\n                <div className='blog__description'\n                    dangerouslySetInnerHTML={{\n                    __html: description\n                }}></div>\n                {/* <ReactMarkdown children={description} components={{\n                    code:Component,\n                }}></ReactMarkdown> */}\n            </div>\n        </div>\n    )\n}\n\nexport default BlogPage"]},"metadata":{},"sourceType":"module"}