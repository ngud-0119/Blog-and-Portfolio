{"ast":null,"code":"var _jsxFileName = \"/home/pranav/Desktop/mysite/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { useTheme } from './Components/useTheme';\nimport Nav from './Components/Nav';\nimport LandingPage from './Components/LandingPage';\nimport BlogPage from './Components/BlogPage'; //These are the styles that need to be changed when we move to dark theme.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState(\"light\");\n\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: {\n      mode: `${theme}`\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            themeSetter: () => {\n              themeToggler();\n            },\n            theme: theme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/blogs/:id\",\n              children: /*#__PURE__*/_jsxDEV(BlogPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ni7AfPXAHNYrYW1+9sA7BKwLJo4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pranav/Desktop/mysite/frontend/src/App.js"],"names":["useState","BrowserRouter","Router","Switch","Route","ThemeProvider","createGlobalStyle","useTheme","Nav","LandingPage","BlogPage","App","theme","setTheme","themeToggler","mode"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,mBAAjD;AACA,SAAQC,QAAR,QAAuB,uBAAvB;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAGA;;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC,OAAD,CAAjC;;AAEA,QAAMc,YAAY,GAAE,MAAK;AACvBF,IAAAA,KAAK,KAAK,OAAV,GAAoBC,QAAQ,CAAC,MAAD,CAA5B,GAAuCA,QAAQ,CAAC,OAAD,CAA/C;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAACE,MAAAA,IAAI,EAAE,GAAEH,KAAM;AAAf,KAAtB;AAAA,2BACE;AAAA,8BACA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEF,QAAC,MAAD;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCAIE,QAAC,GAAD;AAAK,YAAA,WAAW,EAAE,MAAK;AAACE,cAAAA,YAAY;AAAG,aAAvC;AAAyC,YAAA,KAAK,EAAEF;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKI,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,GAAlB;AAAA,qCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,YAAlB;AAAA,qCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAhCQD,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport {useTheme} from './Components/useTheme';\n\nimport Nav from './Components/Nav';\nimport LandingPage from './Components/LandingPage';\nimport BlogPage from './Components/BlogPage';\n\n\n//These are the styles that need to be changed when we move to dark theme.\n\n\nfunction App() {\n\n  const [theme,setTheme] = useState(\"light\")\n\n  const themeToggler =() =>{\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  }\n\n  return (\n    <ThemeProvider theme={{mode:`${theme}`}}>\n      <>\n      <GlobalStyle/>\n    <Router>\n    <div className=\"App\">\n      {/* I had done the  dark theme by giving on click functionality \n      in the Nav Component and giving it the function from here by props.\n      And theme prop is for giving it the giving that moon and moon and sun icons */}\n      <Nav themeSetter={() =>{themeToggler()}} theme={theme}/>\n        <Switch>\n          <Route exact path='/'>\n            <LandingPage/>\n          </Route>\n          <Route exact path='/blogs/:id'>\n            <BlogPage/>\n          </Route>\n        </Switch>\n    </div>\n    </Router>\n    </>\n    </ThemeProvider>\n  );\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}