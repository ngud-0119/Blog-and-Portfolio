{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; //This Custom hook is made for complete blogpage data and also the github api data fetch\n\nconst useFetch = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [blogpage, setBlogpage] = useState([]);\n  const [blogs, setBlogs] = useState([]);\n  const [github, setGithub] = useState([]);\n  const [repos, setRepos] = useState([]);\n  const query = `query{\n        postById(id:${id}){\n          id\n          category\n          coverImage\n          title\n          body\n        }\n        allPosts{\n            id\n            category\n            title\n            coverImage\n            cardDescription\n            body\n          }\n      }\n    `;\n  useEffect(() => {\n    const sendingPost = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    };\n    fetch('http://127.0.0.1:8000/graphql', sendingPost).then(response => response.json()).then(data => setBlogpage(data.data.postById));\n    fetch('http://127.0.0.1:8000/graphql', sendingPost).then(response => response.json()).then(data => setBlogs(data.data.allPosts));\n  }, [id, query]);\n  const numberofblogs = blogs.length;\n  return {\n    blogpage,\n    id,\n    numberofblogs\n  };\n};\n\n_s(useFetch, \"IKDJSmvEMkdvr6K/6y/oHnmqqTE=\", false, function () {\n  return [useParams];\n});\n\nexport default useFetch;","map":{"version":3,"sources":["/home/pranav/Desktop/mysite/frontend/src/useFetch.js"],"names":["useState","useEffect","useParams","useFetch","id","blogpage","setBlogpage","blogs","setBlogs","github","setGithub","repos","setRepos","query","sendingPost","method","headers","body","JSON","stringify","fetch","then","response","json","data","postById","allPosts","numberofblogs","length"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,kBAAxB,C,CAGA;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM;AAACC,IAAAA;AAAD,MAAOF,SAAS,EAAtB;AACA,QAAM,CAACG,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACS,MAAD,EAAQC,SAAR,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACW,KAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAMa,KAAK,GAAG;AAClB,sBAAsBT,EAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAjBI;AAmBAH,EAAAA,SAAS,CAAE,MAAI;AACX,UAAMa,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,QAAAA;AAAD,OAAf;AAHU,KAApB;AAKAO,IAAAA,KAAK,CAAC,+BAAD,EAAkCN,WAAlC,CAAL,CACKO,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIlB,WAAW,CAACkB,IAAI,CAACA,IAAL,CAAUC,QAAX,CAF7B;AAGAL,IAAAA,KAAK,CAAC,+BAAD,EAAkCN,WAAlC,CAAL,CACKO,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIhB,QAAQ,CAACgB,IAAI,CAACA,IAAL,CAAUE,QAAX,CAF1B;AAGH,GAZQ,EAYP,CAACtB,EAAD,EAAIS,KAAJ,CAZO,CAAT;AAcA,QAAMc,aAAa,GAAGpB,KAAK,CAACqB,MAA5B;AACA,SAAO;AAACvB,IAAAA,QAAD;AAAUD,IAAAA,EAAV;AAAauB,IAAAA;AAAb,GAAP;AACH,CA3CD;;GAAMxB,Q;UAEWD,S;;;AA2CjB,eAAeC,QAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom'\n\n\n//This Custom hook is made for complete blogpage data and also the github api data fetch\n\nconst useFetch = () => {\n\n    const {id} = useParams();\n    const [blogpage,setBlogpage] = useState([])\n    const [blogs,setBlogs] = useState([])\n    const [github,setGithub] = useState([])\n    const [repos,setRepos] = useState([])\n    \n    const query =`query{\n        postById(id:${id}){\n          id\n          category\n          coverImage\n          title\n          body\n        }\n        allPosts{\n            id\n            category\n            title\n            coverImage\n            cardDescription\n            body\n          }\n      }\n    `\n\n    useEffect( ()=>{\n        const sendingPost = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({query}),\n        };\n        fetch('http://127.0.0.1:8000/graphql', sendingPost)\n            .then(response => response.json())\n            .then(data => setBlogpage(data.data.postById));\n        fetch('http://127.0.0.1:8000/graphql', sendingPost)\n            .then(response => response.json())\n            .then(data => setBlogs(data.data.allPosts));\n    },[id,query])\n\n    const numberofblogs = blogs.length;\n    return {blogpage,id,numberofblogs};\n}\n\nexport default useFetch\n"]},"metadata":{},"sourceType":"module"}