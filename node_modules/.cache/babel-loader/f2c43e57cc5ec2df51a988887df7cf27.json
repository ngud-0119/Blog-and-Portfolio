{"ast":null,"code":"var _jsxFileName = \"/home/pranav/Desktop/mysite/frontend/src/Components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport ProjectCard from './ProjectCard';\nimport './Projects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Projects() {\n  _s();\n\n  const query = `query{\n        allProjects{\n          id\n          image\n          projectDescription\n          codeLink\n          demoLink\n        }\n      }`;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const sendingPost = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    };\n    fetch('http://127.0.0.1:8000/graphql', sendingPost).then(response => response.json()).then(data => setData(data.data.allProjects));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    id: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects__container\",\n      children: data.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        image: project.image,\n        description: project.projectDescription,\n        repolink: project.codeLink,\n        livedemo: project.demoLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Projects, \"FTfFkLfVdcj0Uk2EahF49AUIgmY=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/home/pranav/Desktop/mysite/frontend/src/Components/Projects.js"],"names":["React","useEffect","ProjectCard","Projects","query","data","setData","useState","sendingPost","method","headers","body","JSON","stringify","fetch","then","response","json","allProjects","map","project","image","projectDescription","codeLink","demoLink"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,KAAK,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QARI;AAUA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBC,QAAQ,CAAC,EAAD,CAA/B;AAEEN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACT,QAAAA;AAAD,OAAf;AAHU,KAApB;AAMCU,IAAAA,KAAK,CAAC,+BAAD,EAAkCN,WAAlC,CAAL,CACIO,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESV,IAAI,IAAIC,OAAO,CAACD,IAAI,CAACA,IAAL,CAAUa,WAAX,CAFxB;AAGJ,GAVU,EAUT,EAVS,CAAT;AAYF,sBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,EAAE,EAAC,UAA7B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBACCb,IAAI,CAACc,GAAL,CAAUC,OAAD,iBACF,QAAC,WAAD;AACI,QAAA,KAAK,EAAEA,OAAO,CAACC,KADnB;AAEI,QAAA,WAAW,EAAED,OAAO,CAACE,kBAFzB;AAGI,QAAA,QAAQ,EAAEF,OAAO,CAACG,QAHtB;AAII,QAAA,QAAQ,EAAEH,OAAO,CAACI;AAJtB;AAAA;AAAA;AAAA;AAAA,cADP;AADD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAeH;;GAxCQrB,Q;;KAAAA,Q;AA0CT,eAAeA,QAAf","sourcesContent":["import {React, useEffect} from 'react'\nimport ProjectCard from './ProjectCard';\nimport './Projects.css'\n\nfunction Projects() {\n    const query = `query{\n        allProjects{\n          id\n          image\n          projectDescription\n          codeLink\n          demoLink\n        }\n      }`\n    \n    const [data,setData] = useState([])\n\n      useEffect(() => {\n        const sendingPost = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({query}),\n        };\n\n         fetch('http://127.0.0.1:8000/graphql', sendingPost)\n            .then(response => response.json())\n            .then(data => setData(data.data.allProjects));\n    },[])\n\n    return (\n    <div className='projects' id='projects'>\n        <p>Projects</p>\n        <div className='projects__container'>\n        {data.map((project) =>\n                <ProjectCard\n                    image={project.image}\n                    description={project.projectDescription}\n                    repolink={project.codeLink}\n                    livedemo={project.demoLink}\n                />\n            )}\n        </div>\n        </div>\n    )\n}\n\nexport default Projects"]},"metadata":{},"sourceType":"module"}